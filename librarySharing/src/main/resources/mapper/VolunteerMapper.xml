<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.project.dao.VolunteerMapper" >
  <resultMap id="BaseResultMap" type="com.example.project.bean.Volunteer" >
    <id column="UID" property="uid" jdbcType="INTEGER" />
    <result column="Anthority" property="anthority" jdbcType="VARCHAR" />
    <result column="StartFrom" property="startfrom" jdbcType="DATE" />
    <result column="Career" property="career" jdbcType="VARCHAR" />
    <result column="Health" property="health" jdbcType="VARCHAR" />
    <result column="LocID" property="locid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    UID, Anthority, StartFrom, Career, Health, LocID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.project.bean.VolunteerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from volunteer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from volunteer
    where UID = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from volunteer
    where UID = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.project.bean.VolunteerExample" >
    delete from volunteer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.project.bean.Volunteer" >
    insert into volunteer (UID, Anthority, StartFrom, 
      Career, Health, LocID
      )
    values (#{uid,jdbcType=INTEGER}, #{anthority,jdbcType=VARCHAR}, #{startfrom,jdbcType=DATE}, 
      #{career,jdbcType=VARCHAR}, #{health,jdbcType=VARCHAR}, #{locid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.project.bean.Volunteer" >
    insert into volunteer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        UID,
      </if>
      <if test="anthority != null" >
        Anthority,
      </if>
      <if test="startfrom != null" >
        StartFrom,
      </if>
      <if test="career != null" >
        Career,
      </if>
      <if test="health != null" >
        Health,
      </if>
      <if test="locid != null" >
        LocID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="anthority != null" >
        #{anthority,jdbcType=VARCHAR},
      </if>
      <if test="startfrom != null" >
        #{startfrom,jdbcType=DATE},
      </if>
      <if test="career != null" >
        #{career,jdbcType=VARCHAR},
      </if>
      <if test="health != null" >
        #{health,jdbcType=VARCHAR},
      </if>
      <if test="locid != null" >
        #{locid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.project.bean.VolunteerExample" resultType="java.lang.Integer" >
    select count(*) from volunteer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update volunteer
    <set >
      <if test="record.uid != null" >
        UID = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.anthority != null" >
        Anthority = #{record.anthority,jdbcType=VARCHAR},
      </if>
      <if test="record.startfrom != null" >
        StartFrom = #{record.startfrom,jdbcType=DATE},
      </if>
      <if test="record.career != null" >
        Career = #{record.career,jdbcType=VARCHAR},
      </if>
      <if test="record.health != null" >
        Health = #{record.health,jdbcType=VARCHAR},
      </if>
      <if test="record.locid != null" >
        LocID = #{record.locid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update volunteer
    set UID = #{record.uid,jdbcType=INTEGER},
      Anthority = #{record.anthority,jdbcType=VARCHAR},
      StartFrom = #{record.startfrom,jdbcType=DATE},
      Career = #{record.career,jdbcType=VARCHAR},
      Health = #{record.health,jdbcType=VARCHAR},
      LocID = #{record.locid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.project.bean.Volunteer" >
    update volunteer
    <set >
      <if test="anthority != null" >
        Anthority = #{anthority,jdbcType=VARCHAR},
      </if>
      <if test="startfrom != null" >
        StartFrom = #{startfrom,jdbcType=DATE},
      </if>
      <if test="career != null" >
        Career = #{career,jdbcType=VARCHAR},
      </if>
      <if test="health != null" >
        Health = #{health,jdbcType=VARCHAR},
      </if>
      <if test="locid != null" >
        LocID = #{locid,jdbcType=INTEGER},
      </if>
    </set>
    where UID = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.project.bean.Volunteer" >
    update volunteer
    set Anthority = #{anthority,jdbcType=VARCHAR},
      StartFrom = #{startfrom,jdbcType=DATE},
      Career = #{career,jdbcType=VARCHAR},
      Health = #{health,jdbcType=VARCHAR},
      LocID = #{locid,jdbcType=INTEGER}
    where UID = #{uid,jdbcType=INTEGER}
  </update>
</mapper>